name: Publish NuGet Packages & Release

on:
  push:
    tags:
      - 'v*' # 例如 v3.2.6

permissions:
  contents: write  # 供 GitHub Release 使用

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      DOTNET_NOLOGO: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      NUGET_PACKAGES: ~/.nuget/packages

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET SDK 8.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.slnx', '**/*.csproj', '**/Directory.Packages.props', '**/global.json') }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Restore (solution, static graph)
        run: dotnet restore Bee.Library.slnx -v minimal -p:RestoreUseStaticGraphEvaluation=true

      # ✅ 關鍵：CI 覆寫 GeneratePackageOnBuild=false，避免 build 就打包
      - name: Build (Release, once)
        run: dotnet build Bee.Library.slnx -c Release --no-restore -v minimal -m \
             -p:ContinuousIntegrationBuild=true \
             -p:GeneratePackageOnBuild=false

      - name: Define projects list
        id: proj
        run: |
          echo 'projects=["src/Bee.Base/Bee.Base.csproj","src/Bee.Define/Bee.Define.csproj","src/Bee.Cache/Bee.Cache.csproj","src/Bee.Db/Bee.Db.csproj","src/Bee.Business/Bee.Business.csproj","src/Bee.Connect/Bee.Connect.csproj","src/Bee.Api.Core/Bee.Api.Core.csproj","src/Bee.Api.AspNetCore/Bee.Api.AspNetCore.csproj","src/Bee.Api.AspNet/Bee.Api.AspNet.csproj","src/Bee.UI.Core/Bee.UI.Core.csproj","src/Bee.UI.WinForms/Bee.UI.WinForms.csproj"]' >> $GITHUB_OUTPUT

      - name: Pack projects (parallel, no build)
        run: |
          echo '${{ steps.proj.outputs.projects }}' | jq -r '.[]' | xargs -I {} -P $(nproc) bash -c '
            echo "Packing {}";
            dotnet pack "{}" \
              -c Release \
              -o ./nupkgs \
              --no-build --no-restore \
              -v minimal \
              -p:IncludeReferencedProjects=false \
              -p:ContinuousIntegrationBuild=true
          '

      - name: Upload nupkgs (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: nupkgs
          path: ./nupkgs/*.nupkg

      - name: Publish to nuget.org
        if: startsWith(github.ref, 'refs/tags/')
        run: dotnet nuget push "./nupkgs/*.nupkg" --api-key "${{ secrets.NUGET_API_KEY }}" --source "https://api.nuget.org/v3/index.json" --skip-duplicate

  release:
    needs: publish   # 👈 先完成 NuGet 發佈
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            自動發佈 NuGet 套件：
            - Bee.Base
            - Bee.Define
            - Bee.Cache
            - Bee.Db
            - Bee.Business
            - Bee.Connect
            - Bee.Api.Core
            - Bee.Api.AspNetCore
            - Bee.Api.AspNet
            - Bee.UI.Core
            - Bee.UI.WinForms

            如需安裝請至 NuGet.org 查詢對應版本。
